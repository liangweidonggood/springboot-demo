syntax = "proto3";

package historydata;


option java_package = "com.example.demo.rpc";
option java_outer_classname= "Historydata";

message uploadWorkHourReq {
  int64 comId = 1;
}

message uploadWorkHourResp {
  string res = 1;
}

message historyDataReq{
  string src = 1;
  string time = 2;
}
message strRes{
  string res = 1;
}
message snReq{
  string sn = 1;
}

message redisFindHistoryRes{
  int64 id = 1;
  int64 macType = 2;
  string src = 3;
  string data = 4;
  string time = 5;
  int64 macStatus = 6;
}

message findAlarmListByDayReq{
  string sn = 1;
  int64 day = 2;
  string data = 3;
}
message findAlarmListByDayRes{
  string startTime = 1;
  string endTime = 2;
  int64 alarm = 3;
}
message findAlarmListByDayListRes{
  repeated findAlarmListByDayRes data = 1;
}
message findAlarmCountByDayReq{
  string sn = 1;
  int64 day = 2;
}
message findAlarmCountByDayRes{
  string data = 1;
  int64 value = 2;
}
message findAlarmCountByDayListRes{
  repeated  findAlarmCountByDayRes data =1;
}
service historydata {
  //根据企业id统计工时并上传 返回远程调用的信息
  rpc uploadWorkHour(uploadWorkHourReq) returns (uploadWorkHourResp);

  //新增history表   新增alarm表
  rpc addHistoryTable(snReq) returns (strRes);

  //redis中查询history
  rpc redisFindHistory(snReq) returns (redisFindHistoryRes);

  //新增history,alarm记录 redis中新增history最新记录
  rpc addHistoryData(historyDataReq) returns (strRes);

  //统计history数据



  //统计alarm数据 按天统计近N天的报警 数量和日期
  rpc findAlarmCountByDay(findAlarmCountByDayReq) returns (findAlarmCountByDayListRes);

  //根据条件统计报警 起始时间 报警数据
  rpc findAlarmListByDay(findAlarmListByDayReq) returns (findAlarmListByDayRes);

}
